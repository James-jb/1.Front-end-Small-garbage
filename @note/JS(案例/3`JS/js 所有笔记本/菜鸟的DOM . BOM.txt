              @HTML DOM (文档对象模型)
 通过【 id  标签 类名 】找到 HTML 元素
  var x=document.getElementById("id");
  var y=x.getElementsByTagName("p");
  var x=document.getElementsByClassName("intro");
  

               @改变 HTML
    document.getElementById(id).innerHTML=新的  html
            @改变 HTML 属性  
   document.getElementById(id).attribute=新属性值  
             

               @改变CSS
    document.getElementById(id).style.property=新样式        
              

              @DOM 事件
     onclick=JavaScript

         onload 和 onunload 事件
onload 和 onunload 事件会在用户进入或离开页面时被触发。
onload 事件可用于检测访问者的浏览器类型和浏览器版本，并基于这些信息来加载网页的正确版本。
onload 和 onunload 事件可用于处理 cookie。
        onchange 事件
onchange 事件常结合对输入字段的验证来使用。
        
        onmouseover 和 onmouseout 事件
onmouseover 和 onmouseout 
事件可用于在用户的鼠标移至 HTML 元素上方或移出元素时触发函数。

         onmousedown、onmouseup 以及 onclick 事件
onmousedown, onmouseup 以及 onclick 构成了鼠标点击事件的所有部分。
首先当点击鼠标按钮时，会触发 onmousedown 事件，当释放鼠标按钮时，
会触发 onmouseup 事件，最后，当完成鼠标点击时，会触发 onclick 事件。
    
            @EventListener
   语法：
element.addEventListener(event, function, useCapture);
    
       所有事件对象
  https://www.runoob.com/jsref/dom-obj-event.html


===========================================
              @BOM 事件 -- 对浏览器
 window.open() - 打开新窗口
window.close() - 关闭当前窗口
window.moveTo() - 移动当前窗口
window.resizeTo() - 调整当前窗口的尺寸     

         #Window Screen
  screen.availWidth - 可用的屏幕宽度
  screen.availHeight - 可用的屏幕高度
         
         #Window Location     
  location.hostname 返回 web 主机的域名
  location.pathname 返回当前页面的路径和文件名
  location.port 返回 web 主机的端口 （80 或 443）
  location.protocol 返回所使用的 web 协议（http: 或 https:）
    
         #Window History
  history.back() - 与在浏览器点击后退按钮相同
  history.forward() - 与在浏览器中点击向前按钮相同
    
         #Window Navigatorr -- 对象包含有关访问者浏览器的信息。
         
         #弹窗 -- 警告框、确认框、提示框
    window.alert("sometext");     
    window.confirm("sometext");
    window.prompt("sometext","defaultvalue");
    
         #计时事件
 setInterval() - 间隔指定的毫秒数不停地执行指定的代码。
 语法
window.setInterval("javascript function",milliseconds);
 setTimeout() - 在指定的毫秒数后执行指定代码。 
 
         #Cookie                                                                    ？？？
         
     