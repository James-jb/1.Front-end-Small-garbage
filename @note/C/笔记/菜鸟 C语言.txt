#include <stdio.h>

int main()
{
    /* 我的第一个 C 程序 */
    printf("Hello, World! \n");

    return 0;
}

实例解析：
/* ... */ 用于注释说明。
printf() 用于格式化输出到屏幕。
printf() 函数在 "stdio.h" 头文件中声明。
stdio.h 是一个头文件 (标准输入输出头文件) , #include 是一个预处理命令，用来引入头文件。 
当编译器遇到 printf() 函数时，如果没有找到 stdio.h 头文件，会发生编译错误。
return 0; 语句用于表示退出程序。

         @C 程序主要包括以下部分：
预处理器指令
函数
变量
语句 & 表达式
注释

              @C 基本语法
令牌可以是 关键字、标识符、常量、字符串值，或是符号。
分号是语句结束符。  |  注释  // 开始的单行注释
标识符

              @ 数据类型
数据类型指的是用于声明不同类型的变量或函数的一个广泛的系统
类型与描述
1	基本类型：
它们是算术类型，包括两种类型：
整数类型: char int 
浮点类型: float double 

2	枚举类型：
它们也是算术类型，被用来定义在程序中只能赋予其一定的离散整数值的变量。

3	void 类型：
类型说明符 void 表明没有可用的值。

4	派生类型：
它们包括：指针类型、数组类型、结构类型、共用体类型和函数类型。

              @变量
是程序可操作的存储区的名称
 int
              @常量
整数常量  0x十六 0八
浮点常量 
字符常量  \\ \' \\?
字符串字面值  
枚举常量

使用 #define 预处理器。
使用 const 关键字。

              @存储类
auto默认的存储类。
register
static
extern

              @运算符
算术运算符
运算符	描述	实例
+	把两个操作数相加	A + B 将得到 30
-	从第一个操作数中减去第二个操作数	A - B 将得到 -10
*	把两个操作数相乘	A * B 将得到 200
/	分子除以分母	B / A 将得到 2
%	取模运算符，整除后的余数	B % A 将得到 0
++	自增运算符，整数值增加 1	A++ 将得到 11
--	自减运算符，整数值减少 1	A-- 将得到 9


         @关系运算符
运算符	描述	实例
==	检查两个操作数的值是否相等，如果相等则条件为真。	(A == B) 为假。
!=	检查两个操作数的值是否相等，如果不相等则条件为真。	(A != B) 为真。
>	检查左操作数的值是否大于右操作数的值，如果是则条件为真。	(A > B) 为假。
<	检查左操作数的值是否小于右操作数的值，如果是则条件为真。	(A < B) 为真。
>=	检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。	(A >= B) 为假。
<=	检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。	(A <= B) 为真。

逻辑运算符
运算符	描述	实例
&&	称为逻辑与运算符。如果两个操作数都非零，则条件为真。	(A && B) 为假。
||	称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。	(A || B) 为真。
!	称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。	!(A && B) 为真。

位运算符
 & | ^ ~ >> <<
赋值运算符
= += -= 

杂项运算符
sizeof () 
&  *  ?:

              @判断
判断语句
if  if...else  switch 

? : 运算符(三元运算符)

              @循环
类型
while for do...while 
控制语句
break continue goto 

              @函数 ???
主函数 main() 
int 
              @作用域规则
局部
形式
int char float couble pointer

              @数组
type 
              @enum(枚举)
				  @指针 是内存地址，指针变量是用来存放内存地址的变量。
				  @函数指针 是指向函数的指针变量。
				  @字符串 stcpy 
				  @结构体 Title Author Subject Book ID
				  @共用体 union 
				  @位域 type 
				  @typedef 来为类型取一个新的名字
				  @输入与输出 
				  @文件读写
				  @预处理器
指令	描述
#define	定义宏
#include	包含一个源代码文件
#undef	取消已定义的宏
#ifdef	如果宏已经定义，则返回真
#ifndef	如果宏没有定义，则返回真
#if	如果给定条件为真，则编译下面代码
#else	#if 的替代方案
#elif	如果前面的 #if 给定条件不为真，当前条件为真，则编译下面代码
#endif	结束一个 #if……#else 条件编译块
#error	当遇到标准错误时，输出错误消息
#pragma	使用标准化方法，向编译器发布特殊的命令到编译器中	
			  
			  
基本尝试吧！！！=========================
			  
			  @头文件
			  